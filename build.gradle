allprojects {
	repositories {
		mavenCentral()
	}
}

def mods_folder = 'hydrogen/mods'
def web_folder = 'hydrogen/web'

def mod_server = 'cavani.endorfina.hydrogen.server-v1.0'
def mod_service = 'cavani.endorfina.hydrogen.service-v1.0'
def mod_dashboard = 'cavani.endorfina.hydrogen.dashboard-v1.0'
def mod_engine = 'cavani.endorfina.hydrogen.engine-v1.0'
def mod_persistence = 'cavani.endorfina.hydrogen.persistence-v1.0'
def mod_network = 'cavani.endorfina.hydrogen.network-v1.0'

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'

	sourceCompatibility = 1.7
	version = '1.0'

	configurations {
		provided
	}
	
	sourceSets {
		main {
			compileClasspath += configurations.provided
		}
		test {
			compileClasspath += configurations.provided
		}
	}

	eclipse {
		classpath { plusConfigurations += configurations.provided }
	}
	
	dependencies {
		testCompile 'junit:junit:4.11'
	}

	test {
		testLogging {
			events "started", "passed", "skipped", "failed", "standardOut", "standardError"
			exceptionFormat "full"
		}
	}
}


project(':hydrogen.persistence') {
	dependencies {
		provided 'org.vert-x:vertx-lang-java:1.3.1.final'
		testCompile 'org.vert-x:vertx-testframework:1.3.1.final'
	}
	task deploy(type: Copy) {
		into "../$mods_folder/$mod_persistence"
		with jar
	}
}

project(':hydrogen.network') {
	dependencies {
		provided 'org.vert-x:vertx-lang-java:1.3.1.final'
		testCompile 'org.vert-x:vertx-testframework:1.3.1.final'
	}
	task deploy(type: Copy) {
		into "../$mods_folder/$mod_network"
		with jar
	}
}

project(':hydrogen.server') {
	apply plugin: 'war'
	apply plugin: 'eclipse-wtp'
	
	dependencies {
		compile project(':hydrogen.network')
		provided 'org.vert-x:vertx-lang-java:1.3.1.final'
		testCompile 'org.vert-x:vertx-testframework:1.3.1.final'
	}
	task deploy(dependsOn: 'classes') {
		copy {
			into "../$mods_folder/$mod_server"
			with jar
		}
		copy {
			into "../$web_folder/server"
			from file('src/main/webapp/')
		}
	}
}

project(':hydrogen.service') {
	dependencies {
		compile project(':hydrogen.persistence')
		provided 'org.vert-x:vertx-lang-java:1.3.1.final'
		testCompile 'org.vert-x:vertx-testframework:1.3.1.final'
	}
	task deploy(type: Copy) {
		into "../$mods_folder/$mod_service"
		with jar
	}
}

project(':hydrogen.dashboard') {
	apply plugin: 'war'
	apply plugin: 'eclipse-wtp'
	
	dependencies {
		compile project(':hydrogen.network')
		provided 'org.vert-x:vertx-lang-java:1.3.1.final'
		testCompile 'org.vert-x:vertx-testframework:1.3.1.final'
	}
	task deploy(dependsOn: 'classes') {
		copy {
			into "../$mods_folder/$mod_dashboard"
			with jar
		}
		copy {
			into "../$web_folder/dash"
			from file('src/main/webapp/')
		}
	}
}

project(':hydrogen.engine') {
	dependencies {
		compile project(':hydrogen.persistence')
		provided 'org.vert-x:vertx-lang-java:1.3.1.final'
		testCompile 'org.vert-x:vertx-testframework:1.3.1.final'
	}
	task deploy(type: Copy) {
		into "../$mods_folder/$mod_engine"
		with jar
	}
}

project(':hydrogen.tools') {
	dependencies {
		compile project(':hydrogen.persistence')
		provided 'org.vert-x:vertx-lang-java:1.3.1.final'
	}
}

task deployServer(dependsOn: [
	':hydrogen.persistence:deploy',
	':hydrogen.network:deploy',
	':hydrogen.service:deploy',
	':hydrogen.server:deploy',
	])

task deployDashboard(dependsOn: [
	':hydrogen.persistence:deploy',
	':hydrogen.network:deploy',
	':hydrogen.engine:deploy',
	':hydrogen.dashboard:deploy',
	])

task deploy(dependsOn: [
	'deployServer',
	'deployDashboard',
	])

/*
task deployCleanUp() {
	file("$mods_folder/$mod_server").deleteDir()
	file("$mods_folder/$mod_service").deleteDir()
	file("$mods_folder/$mod_dashboard").deleteDir()
	file("$mods_folder/$mod_engine").deleteDir()
	file("$mods_folder/$mod_persistence").deleteDir()
	file("$mods_folder/$mod_network").deleteDir()
}
*/

task setup(type: Exec, dependsOn: [':hydrogen.tools:assemble']) {
	def proj = subprojects.find{ it.name == 'hydrogen.tools' }
	def jars = proj.configurations.compile*.toString().join(':')

	environment 'VERTX_MODS', mods_folder

	commandLine 'vertx',
		'run', 'hydrogen.tools/src/main/java/cavani/endorfina/hydrogen/tools/Setup.java',
		'-cp', jars
}

